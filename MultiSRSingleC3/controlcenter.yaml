apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: destination
spec:
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: my.domain
      prefix: rb-c3
  configOverrides:
    server:
    - confluent.controlcenter.streams.cprest.url=http://kafka.destination.svc.cluster.local:8090
    - confluent.controlcenter.kafka.xyz.cprest.url=http://kafka.xyz.svc.cluster.local:8090
    - confluent.controlcenter.kafka.dev.cprest.url=http://kafka.dev.svc.cluster.local:8090
    - confluent.controlcenter.kafka.test.cprest.url=http://kafka.test.svc.cluster.local:8090
    - confluent.controlcenter.kafka.stage.cprest.url=http://kafka.stage.svc.cluster.local:8090
  replicas: 1
  podTemplate:
    resources:
      requests:
        cpu: 1
        memory: 2Gi
  image:
    application: confluentinc/cp-enterprise-control-center:7.2.1
    init: confluentinc/confluent-init-container:2.4.1
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  # Here, Control Center is deployed in the destination cluster. Hence, you'll need 
  # to specify the source Kafka cluster to be additionally monitored.
  monitoringKafkaClusters:
    - name: xyz
      bootstrapEndpoint: kafka.xyz.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain.txt`, with value being a text file with
          # the username & password of the principal that authenticates to Kafka.
          secretRef: credential
      tls:
        enabled: true
    - name: dev
      bootstrapEndpoint: kafka.dev.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain.txt`, with value being a text file with
          # the username & password of the principal that authenticates to Kafka.
          secretRef: credential
      tls:
        enabled: true
    - name: test
      bootstrapEndpoint: kafka.test.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain.txt`, with value being a text file with
          # the username & password of the principal that authenticates to Kafka.
          secretRef: credential
      tls:
        enabled: true
    - name: stage
      bootstrapEndpoint: kafka.stage.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain.txt`, with value being a text file with
          # the username & password of the principal that authenticates to Kafka.
          secretRef: credential
      tls:
        enabled: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.destination.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          # This secret requires a key `plain.txt`, with value being a text file with
          # the username & password of the principal that authenticates to Kafka.
          secretRef: credential
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.destination.svc.cluster.local:8081
      tls:
        enabled: true
      clusters: 
      - name: xyz
        url: https://schemaregistry.xyz.svc.cluster.local:8081
        tls:
          enabled: true
      - name: dev
        url: https://schemaregistry.dev.svc.cluster.local:8081
        tls:
          enabled: true
      - name: test
        url: https://schemaregistry.test.svc.cluster.local:8081
        tls:
          enabled: true
      - name: stage
        url: https://schemaregistry.stage.svc.cluster.local:8081
        tls:
          enabled: true
    connect:
      - name: replicator
        url: https://replicator.destination.svc.cluster.local:8083
        tls:
          enabled: true
