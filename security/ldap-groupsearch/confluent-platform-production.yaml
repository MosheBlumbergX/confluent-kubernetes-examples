apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper:7.4.0
    init: confluentinc/confluent-init-container:2.4.1
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.4.0
    init: confluentinc/confluent-init-container:2.4.1
  dataVolumeCapacity: 10Gi
  tls:
    secretRef: tls-kafka
  listeners:
    internal:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\s]?=[\s]?([a-zA-Z0-9.]*)?.*/$1/
      tls:
        enabled: true
    custom: 
    - name: ldapcheck
      port: 9095 
      authentication:
        type: ldap
  configOverrides: 
    server: 
      - authorizer.class.name=io.confluent.kafka.security.ldap.authorizer.LdapAuthorizer
      - ldap.search.mode=USERS 
      - ldap.user.memberof.attribute=title # using title as memeberof is not available in in the openldap schema 
  identityProvider:
    type: ldap
    ldap:
      address: ldap://ldap.confluent.svc.cluster.local:389
      authentication:
        type: simple
        simple:
          secretRef: credential
      configurations:
        userNameAttribute: cn
        userMemberOfAttributePattern: cn=(.*),ou=groups,dc=test,dc=com
        userObjectClass: inetOrgPerson
        userSearchBase: ou=users,dc=test,dc=com
        userSearchScope: 2 
  authorization:
    type: simple
    superUsers:
    - User:kafka
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2181
# ---
# apiVersion: platform.confluent.io/v1beta1
# kind: Connect
# metadata:
#   name: connect
#   namespace: confluent
# spec:
#   replicas: 2
#   image:
#     application: confluentinc/cp-server-connect:7.4.0
#     init: confluentinc/confluent-init-container:2.4.1
#   tls:
#     secretRef: tls-group1
#   externalAccess:
#     type: loadBalancer
#     loadBalancer:
#       domain: my.domain
#       prefix: rb-connect
#   authorization:
#     type: rbac
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: plain
#         jaasConfig:
#           secretRef: credential
#       tls:
#         enabled: true
#     mds:
#       endpoint: https://kafka.confluent.svc.cluster.local:8090
#       tokenKeyPair:
#         secretRef: mds-token
#       authentication:
#         type: bearer
#         bearer:
#           secretRef: connect-mds-client
#       tls:
#         enabled: true
# ---
# apiVersion: platform.confluent.io/v1beta1
# kind: SchemaRegistry
# metadata:
#   name: schemaregistry
#   namespace: confluent
# spec:
#   replicas: 1
#   image:
#     application: confluentinc/cp-schema-registry:7.4.0
#     init: confluentinc/confluent-init-container:2.4.1
#   tls:
#     secretRef: tls-group1
#   externalAccess:
#     type: loadBalancer
#     loadBalancer:
#       domain: my.domain
#       prefix: rb-sr
#   authorization:
#     type: rbac
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: plain
#         jaasConfig:
#           secretRef: credential
#       tls:
#         enabled: true
#     mds:
#       endpoint: https://kafka.confluent.svc.cluster.local:8090
#       tokenKeyPair:
#         secretRef: mds-token
#       authentication:
#         type: bearer
#         bearer:
#           secretRef: sr-mds-client
#       tls:
#         enabled: true
# ---
# apiVersion: platform.confluent.io/v1beta1
# kind: KafkaRestProxy
# metadata:
#   name: kafkarestproxy
#   namespace: confluent
# spec:
#   replicas: 1
#   image:
#     application: confluentinc/cp-kafka-rest:7.4.0
#     init: confluentinc/confluent-init-container:2.4.1
#   tls:
#     secretRef: tls-group1
#   externalAccess:
#     type: loadBalancer
#     loadBalancer:
#       domain: my.domain
#       prefix: rb-krp
#   authorization:
#     type: rbac
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: plain
#         jaasConfig:
#           secretRef: credential
#       tls:
#         enabled: true
#     mds:
#       endpoint: https://kafka.confluent.svc.cluster.local:8090
#       tokenKeyPair:
#         secretRef: mds-token
#       authentication:
#         type: bearer
#         bearer:
#           secretRef: krp-mds-client
#       tls:
#         enabled: true
#     schemaRegistry:
#       url: https://schemaregistry.confluent.svc.cluster.local:8081
#       tls:
#         enabled: true
# ---
# apiVersion: platform.confluent.io/v1beta1
# kind: KsqlDB
# metadata:
#   name: ksqldb
#   namespace: confluent
# spec:
#   replicas: 2
#   image:
#     application: confluentinc/cp-ksqldb-server:7.4.0
#     init: confluentinc/confluent-init-container:2.4.1
#   dataVolumeCapacity: 10Gi
#   authorization:
#     type: rbac
#   externalAccess:
#     type: loadBalancer
#     loadBalancer:
#       domain: my.domain
#       prefix: rb-ksql
#   tls:
#     secretRef: tls-group1
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: plain
#         jaasConfig:
#           secretRef: credential
#       tls:
#         enabled: true
#     mds:
#       endpoint: https://kafka.confluent.svc.cluster.local:8090
#       tokenKeyPair:
#         secretRef: mds-token
#       authentication:
#         type: bearer
#         bearer:
#           secretRef: ksqldb-mds-client
#       tls:
#         enabled: true

---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: rest-credential
